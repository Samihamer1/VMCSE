<Project Sdk="Microsoft.NET.Sdk">

  <!-- 
  Imports silksong path properties only if present in order to allow CI builds. The file should be gitignored.
  If you are checking out from git and need to create a new one, you can use `dotnet new silksongpath` to generate one.
  -->
  <Import Condition="Exists('SilksongPath.props')" Project="SilksongPath.props" />

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <RestoreAdditionalProjectSources>
        https://nuget.bepinex.dev/v3/index.json
    </RestoreAdditionalProjectSources>
	<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
	<RestorePackagesWithLockFile>True</RestorePackagesWithLockFile>
  </PropertyGroup>

  <PropertyGroup>
    <!--These properties will control the generated PluginInfo. Version is also used by various parts of the build system.-->
	  <AssemblyTitle>VMCSE</AssemblyTitle>
    <Version>0.1.0</Version>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BepInEx.Analyzers" Version="1.0.8" PrivateAssets="all" />
    <PackageReference Include="BepInEx.Core" Version="5.4.21" />
    <PackageReference Include="BepInEx.PluginInfoProps" Version="1.1.0" />
    <PackageReference Include="Hamunii.BepInEx.AutoPlugin" Version="2.0.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Silksong.FsmUtil" Version="0.2.0" />
    <PackageReference Include="UnityEngine.Modules" Version="6000.0.50" IncludeAssets="compile" />
    <!--If you're unable resolve this dependency, check that you're using the nuget v3 package feed instead of v2.-->
    <PackageReference Include="Silksong.GameLibs" Version="*-*" />
  </ItemGroup>

  <ItemGroup>
	<EmbeddedResource Include="Resources/**" />
	<Compile Remove="Resources\DevilSword\SlashAlt\**" />
	<Compile Remove="Resources\DevilSword\SlashUp\**" />
	<Compile Remove="Resources\DevilSword\Slash\**" />
	<EmbeddedResource Remove="Resources\DevilSword\SlashAlt\**" />
	<EmbeddedResource Remove="Resources\DevilSword\SlashUp\**" />
	<EmbeddedResource Remove="Resources\DevilSword\Slash\**" />
	<None Remove="Resources\DevilSword\SlashAlt\**" />
	<None Remove="Resources\DevilSword\SlashUp\**" />
	<None Remove="Resources\DevilSword\Slash\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="Resources\UI\Style\Style1BG.png" />
    <None Remove="Resources\UI\Style\Style1FG.png" />
    <None Remove="Resources\UI\Style\Style2BG.png" />
    <None Remove="Resources\UI\Style\Style2FG.png" />
    <None Remove="Resources\UI\Style\Style3BG.png" />
    <None Remove="Resources\UI\Style\Style3FG.png" />
    <None Remove="Resources\UI\Style\Style4BG.png" />
    <None Remove="Resources\UI\Style\Style4FG.png" />
    <None Remove="Resources\UI\Style\Style5BG.png" />
    <None Remove="Resources\UI\Style\Style5FG.png" />
    <None Remove="Resources\UI\Style\Style6BG.png" />
    <None Remove="Resources\UI\Style\Style6FG.png" />
    <None Remove="Resources\UI\Style\Style7BG.png" />
    <None Remove="Resources\UI\Style\Style7FG.png" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="UnityEngine.UI">
      <HintPath>C:\Program Files (x86)\Steam\steamapps\common\Hollow Knight Silksong\Hollow Knight Silksong_Data\Managed\UnityEngine.UI.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Resources\DevilSword\DriveAntic\" />
    <Folder Include="Resources\UI\Trigger\" />
  </ItemGroup>

  <Target Name="CopyMod" AfterTargets="PostBuildEvent" Condition="'$(SilksongFolder)' != ''">
      <ItemGroup>
          <Binaries Include="$(TargetPath)" />
          <Binaries Include="$(TargetDir)/$(TargetName).pdb" />
      </ItemGroup>

      <Copy SourceFiles="@(Binaries)" DestinationFolder="$(SilksongFolder)/BepInEx/plugins/$(TargetName)" />

      <PropertyGroup>
          <ExportFolder>bin/Publish</ExportFolder>
      </PropertyGroup>
      
      <RemoveDir Directories="$(IntermediateOutputPath)/archive" />
      <MakeDir Directories="$(ExportFolder)" />
      <Copy SourceFiles="@(Binaries)" DestinationFolder="$(IntermediateOutputPath)/archive" />
      <ZipDirectory SourceDirectory="$(IntermediateOutputPath)/archive" DestinationFile="$(ExportFolder)/$(TargetName).zip" Overwrite="True" />
  </Target>
</Project>